#!/bin/bash


isPingableCheck()
{
    ip="$1"

    if isPingable "$ip"; then
        log 'passed' "The system with ip $ip is running"
        return 0
    else
        log 'failed' "The system with ip $ip is not pingable"
        return 1
    fi
}


isPortOpenCheck()
{
    ip="$1"
    port="$2"

    if isPortOpen "$ip" "$port"; then
        log 'passed' "The port \"$port\" on system with ip \"$ip\" is open."
        return 0
    else
        log 'failed' "The port \"$port\" on system with ip \"$ip\" is not open."
        return 1
    fi
}

isNotPortOpenCheck()
{
    if ! isPortOpen "$ip" "$port"; then
        log 'passed' "The port \"$port\" on system with ip \"$ip\" is closed."
        return 0
    else
        log 'failed' "The port \"$port\" on system with ip \"$ip\" is not closed."
        return 1
    fi
}

isHttpStatusCodeCheck()
{
                    url="$1"
    expectedStatusCodes="$2"
     returnedStatusCode=$(getHttpStatusCodeFromUrl "$url")

    # split status code
    IFS=',' read -ra statusCodeArray <<< "$expectedStatusCodes"

    portName=""
    for statusCode in "${statusCodeArray[@]}"; do
        if [ "$portName" != "" ]; then
            portName="$portName, "
        fi

        portName="$portName$statusCode"
    done

    for statusCode in "${statusCodeArray[@]}"; do
        if [ "$statusCode" == "$returnedStatusCode" ]; then
            local text="The url \"$url\" returns the expected status code \"$statusCode\""

            if [ ${#statusCodeArray[@]} -gt 1 ]; then
                text="$text (one of the expected ports: $portName)."
            else
                text="$text."
            fi

            log 'passed' "$text"
            return 0
        fi
    done

    local text="The url \"$url\" does not return the expected status code \"$expectedStatusCodes\" (returns \"$returnedStatusCode\")"

    if [ ${#statusCodeArray[@]} -gt 1 ]; then
        text="$text (one of the expected ports: $portName)."
    else
        text="$text."
    fi

    log 'failed' "$text"
    return 1
}

isDomainAssignedToIpCheck()
{
    domain="$1"
    ip="$2"

    assignedIp=$(dig A +short "$domain")

    # check passed
    if [ "$ip" == "$assignedIp" ]; then
        log 'passed' "The given domain \"$domain\" is assigned to ip \"$ip\"."
        return 0
    fi

    # check failed
    log 'failed' "The given domain \"$domain\" is not assigned to ip $ip. Assigned ip: $assignedIp"
    return 1
}

